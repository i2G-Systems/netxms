array a1;
a1[1] = "test";
a1[2] = 42;
a1[100] = 101;
assert(a1.size == 3);
assert(a1.minIndex == 1);
assert(a1.maxIndex == 100);
assert(42 in a1);
assert(a1.indexOf(42) == 2);
assert(!("abcde" in a1));
assert(a1.indexOf("abcde") == null);

a2 = [1, 2, 3, 4];
assert(a2.size == 4);
assert(a2.minIndex == 0);
assert(a2.maxIndex == 3);

a2.append(99);
assert(a2.size == 5);
assert(a2.maxIndex == 4);
assert(a2[4] == 99);

a2.insert(1, 500);
assert(a2.size == 6);
assert(a2.maxIndex == 5);
assert(a2[0] == 1);
assert(a2[1] == 500);
assert(a2[2] == 2);

x = a1.pop();
assert(x == 101);
assert(a1.size == 2);
assert(a1.minIndex == 1);
assert(a1.maxIndex == 2);

a2.remove(0);
assert(a2.size == 5);
assert(a2.maxIndex == 4);
assert(a2[0] == 500);
assert(a2[1] == 2);

a3 = a2;
assert(a3.size == 5);
assert(a3.maxIndex == 4);
assert(a3[0] == 500);
assert(a3[1] == 2);

a2.pop();
assert(a3.size == 5);
assert(a2.size == 4);

a5 = [1, 2, 3, 4, 5, 6, 7];
i = 1;
for(n : a5)
{
	assert(n == i);
	i++;
}

a6 = [1, 2, 3];
a7 = [4, 5, 6];
a6.appendAll(a7);
assert(a6.size == 6);
for(i = 0; i < 6; i++)
	assert(a6[i] == i + 1);

a8 = [1, 2, 3];
a9 = [4, 5, 6];
a8.insertAll(0, a9);
assert(a8.size == 6);
for(i = 0; i < 3; i++)
	assert(a8[i] == i + 4);
for(i = 3; i < 6; i++)
	assert(a8[i] == i - 2);

a10 = [1, 2, 3];
a10.appendAll(a10);
assert(a10.size == 6);
for(i = 0; i < 3; i++)
	assert(a10[i] == i + 1);
for(i = 3; i < 6; i++)
	assert(a10[i] == i - 2);

a11 = [ "element@0", "element@1" ];
a11[-1] = "element@-1";
assert(a11.size == 3);
assert(a11.minIndex == -1);
assert(a11.maxIndex == 1);
assert("element@-1" in a11);
assert(a11.indexOf("element@-1") == -1);

return 0;
